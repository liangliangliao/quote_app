name: Scan Android V1 Markers

on:
  workflow_dispatch:

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect Flutter project dir (find pubspec.yaml)
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          DIR="$(find . -maxdepth 6 -type f -name pubspec.yaml | head -n1 | xargs -I{} dirname {} || true)"
          if [ -z "$DIR" ]; then
            echo "❌ pubspec.yaml 未找到"; exit 66
          fi
          echo "project_dir=$DIR" >> "$GITHUB_OUTPUT"
          echo "Project dir: $DIR"

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Flutter 3.35.3 (stable)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.3'
          channel: stable
          cache: false

      - name: Clean ALL pub caches (fresh resolve)
        shell: bash
        run: |
          set -euo pipefail
          flutter --version
          rm -rf "$HOME/.pub-cache" || true
          flutter pub cache clean || true

      - name: Flutter pub get (fresh)
        working-directory: ${{ steps.detect.outputs.project_dir }}
        shell: bash
        run: |
          set -euo pipefail
          flutter clean || true
          rm -f pubspec.lock || true
          flutter pub get

      - name: Show resolved deps
        working-directory: ${{ steps.detect.outputs.project_dir }}
        shell: bash
        run: |
          echo "=== pubspec.yaml(deps heads) ==="
          sed -n '1,200p' pubspec.yaml
          echo "=== pubspec.lock (first 300 lines) ==="
          sed -n '1,300p' pubspec.lock || true
          echo "=== flutter pub deps (compact) ==="
          flutter pub deps --style=compact || true

      - name: Scan project/android for V1 markers (with line numbers)
        id: scan_project
        shell: bash
        run: |
          set -euo pipefail
          DIR="${{ steps.detect.outputs.project_dir }}"
          PATTERN='io\.flutter\.app\.(Flutter(Application|Activity|FragmentActivity))|io\.flutter\.view\.FlutterMain|PluginRegistry(\.Registrar)?|GeneratedPluginRegistrant\.registerWith|registerWith\s*\(|ShimPluginRegistry|PluginRegistrantCallback'
          echo "== Scan project android/ =="
          (grep -RNI --include='*.java' --include='*.kt' --include='*.xml' -E "$PATTERN" "$DIR/android" || true) | tee project_v1_hits.txt

      - name: Scan pub-cache for V1 markers (with line numbers)
        id: scan_cache
        shell: bash
        run: |
          set -euo pipefail
          PATTERN='io\.flutter\.app\.(Flutter(Application|Activity|FragmentActivity))|io\.flutter\.view\.FlutterMain|PluginRegistry(\.Registrar)?|GeneratedPluginRegistrant\.registerWith|registerWith\s*\(|ShimPluginRegistry|PluginRegistrantCallback'
          echo "== Scan $HOME/.pub-cache =="
          (grep -RNI --include='*.java' --include='*.kt' --include='*.xml' -E "$PATTERN" "$HOME/.pub-cache" || true) | tee pubcache_v1_hits.txt

      - name: Upload scan artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: v1-scan-results
          path: |
            ${{ steps.detect.outputs.project_dir }}/pubspec.lock
            project_v1_hits.txt
            pubcache_v1_hits.txt
