name: Android (scan V1 and build)

on:
  workflow_dispatch:
  push:
    branches: [main, master]

jobs:
  android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: List repo
        run: ls -lah

      - name: Force replace with latest zip
        shell: bash
        run: |
         set -euo pipefail
         # 选最新的源码包（按需改成你的文件名模式）
         SEL="$(ls -1t *.zip 2>/dev/null | head -n1 || true)"
         [ -n "$SEL" ] || { echo "No zip found"; exit 66; }
         echo "Using ZIP: $SEL"
         # 强制覆盖解压，但排除工作流目录，避免自我覆盖
         unzip -q -o "$SEL" -x ".github/*"

      - name: Detect Flutter project dir (find pubspec.yaml)
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          DIR="$(find . -maxdepth 6 -type f -name pubspec.yaml | head -n1 | xargs -I{} dirname {} || true)"
          [ -n "$DIR" ] || { echo "No pubspec.yaml"; exit 66; }
          DIR="${DIR#./}"
          echo "project_dir=${DIR}" >> "$GITHUB_OUTPUT"
          echo "Project: $DIR"

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Flutter 3.35.3 (stable)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.3"
          channel: stable
          cache: true

      - name: Print tool versions
        shell: bash
        run: |
          set -euo pipefail
          flutter doctor -v || true
          flutter --version || true
          dart --version || true

      - name: Clean ALL pub caches (fresh resolve)
        working-directory: ${{ steps.detect.outputs.project_dir }}
        shell: bash
        run: |
          set -euo pipefail
          flutter clean || true
          rm -f pubspec.lock || true
          yes | flutter pub cache clean >/dev/null 2>&1 || true
          rm -rf "$HOME/.pub-cache" || true

      - name: Flutter pub get (fresh)
        working-directory: ${{ steps.detect.outputs.project_dir }}
        shell: bash
        run: flutter pub get
        
      - name: Scan project/android for V1 markers (with line numbers)
        working-directory: ${{ steps.detect.outputs.project_dir }}
        shell: bash
        run: |
          set -euo pipefail
          echo "=== Scan your app's android/ sources ==="
          grep -RIn --include=*.{kt,java,xml} \
            -E 'io\.flutter\.app\.(FlutterActivity|FragmentActivity|FlutterApplication)|io\.flutter\.view\.FlutterMain|GeneratedPluginRegistrant\.registerWith|PluginRegistry(\.Registrar)?|ShimPluginRegistry|PluginRegistrantCallback' \
            android || true
          echo "=== Scan manifests for V1 application tag ==="
          grep -RIn --include=AndroidManifest.xml 'io\.flutter\.app\.FlutterApplication|flutterEmbedding' android || true

      - name: Scan pub-cache for V1 markers (with line numbers)
        shell: bash
        run: |
          set -euo pipefail
          PUB="${PUB_CACHE:-$HOME/.pub-cache}"
          echo "=== Scan downloaded plugins in: $PUB ==="
          grep -RIn --include=*.{kt,java} \
            -E 'io\.flutter\.app\.(FlutterActivity|FragmentActivity|FlutterApplication)|io\.flutter\.view\.FlutterMain|GeneratedPluginRegistrant\.registerWith|PluginRegistry(\.Registrar)?|ShimPluginRegistry|PluginRegistrantCallback' \
            "$PUB" 2>/dev/null || true

      - name: Sanity fix app/build.gradle (dedupe Flutter plugin)
        shell: bash
        working-directory: ${{ steps.detect.outputs.project_dir }}
        run: |
          set -euo pipefail

          echo "=== BEFORE (head) ==="
          nl -ba android/app/build.gradle | sed -n '1,120p' || true
          echo "=== BEFORE (grep) ==="
          grep -nE 'flutter\.gradle|dev\.flutter\.flutter-gradle-plugin' android/app/build.gradle || true

          APP=android/app/build.gradle

          # 1) 移除所有旧式 apply from: '.../flutter.gradle'
          perl -0777 -pe "s/^[ \\t]*apply[ \\t]+from:[ \\t]*['\\\"][^'\\\"]*flutter\\.gradle['\\\"][ \\t]*\\r?\\n//mg" -i "$APP"
          # 带变量的写法（如 $flutterRoot / ${flutterSdkPath}）也干掉
          perl -0777 -pe "s/^[ \\t]*apply[ \\t]+from:[ \\t]*\\$?\\{?flutter[^\\n\\}]*\\}?[^\\n]*flutter\\.gradle[ \\t]*\\r?\\n//mg" -i "$APP"

          # 2) 移除旧式 apply plugin: 'dev.flutter.flutter-gradle-plugin'
          perl -0777 -pe "s/^[ \\t]*apply[ \\t]+plugin:[ \\t]*['\\\"]dev\\.flutter\\.flutter-gradle-plugin['\\\"][ \\t]*\\r?\\n//mg" -i "$APP"

          # 3) plugins{} 中确保 flutter 插件只出现一次（去重）
          awk '
            BEGIN{in=0; seen=0}
            /^[[:space:]]*plugins[[:space:]]*\\{/ {in=1}
            { 
              if (in && $0 ~ /id[[:space:]]+\"dev\\.flutter\\.flutter-gradle-plugin\"/) {
                if (seen==1) next; else seen=1
              }
              print
              if (in && $0 ~ /\\}/) in=0
            }
          ' "$APP" > "$APP.tmp" && mv "$APP.tmp" "$APP"

          echo "=== AFTER (head) ==="
          nl -ba android/app/build.gradle | sed -n '1,120p' || true
          echo "=== AFTER (grep) ==="
          grep -nE 'flutter\.gradle|dev\.flutter\.flutter-gradle-plugin' android/app/build.gradle || true

          echo "=== FULL REPO SEARCH (should be empty for apply-from/apply-plugin) ==="
          grep -RIn --include=*.gradle -E 'apply[[:space:]]+from:.*flutter\.gradle|apply[[:space:]]+plugin:.*dev\.flutter\.flutter-gradle-plugin' android || true
      - name: Build APK (capture logs)
        id: buildapk
        working-directory: ${{ steps.detect.outputs.project_dir }}
        shell: bash
        run: |
          set -euo pipefail
          ( set -o pipefail; flutter build apk -v 2>&1 | tee build_apk.log ) || true
          echo "=== tail build_apk.log ==="
          tail -n 400 build_apk.log || true

      - name: Annotate compiler errors
        if: always()
        working-directory: ${{ steps.detect.outputs.project_dir }}
        shell: bash
        run: |
          set -euo pipefail
          echo "=== Flutter build log (errors only) ==="
          [ -f build_apk.log ] && grep -nE "(^e: |\.kt:[0-9]+:|\.java:[0-9]+:|^FAILURE:|Android v1 embedding)" build_apk.log || true

      - name: Upload artifacts (APK + logs)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-and-logs
          path: |
            ${{ steps.detect.outputs.project_dir }}/build/app/outputs/flutter-apk/app-release.apk
            ${{ steps.detect.outputs.project_dir }}/build_apk.log
