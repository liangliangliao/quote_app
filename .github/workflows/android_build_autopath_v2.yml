name: build-android
on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter 3.22.0
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.0"
          channel: stable
          cache: true

      - name: Locate Flutter project root (auto, robust)
        id: locate
        shell: bash
        run: |
          set -euo pipefail
          echo "Workspace: $GITHUB_WORKSPACE"
          echo "== First level tree =="
          ls -la

          # Find all pubspec.yaml up to depth 6
          mapfile -t CANDIDATES < <(find "$GITHUB_WORKSPACE" -maxdepth 6 -type f -name pubspec.yaml | sort || true)
          if [ ${#CANDIDATES[@]} -eq 0 ]; then
            echo "No pubspec.yaml found under repo."
            exit 2
          fi

          # Prefer one that has android/app/src nearby
          PD=""
          for f in "${CANDIDATES[@]}"; do
            d="$(dirname "$f")"
            if [ -d "$d/android/app/src" ]; then
              PD="$d"
              break
            fi
          done
          # Fallback to the first candidate
          if [ -z "${PD:-}" ]; then
            PD="$(dirname "${CANDIDATES[0]}")"
          fi

          echo "Found pubspec at: $PD/pubspec.yaml"
          test -f "$PD/pubspec.yaml"
          echo "PROJECT_DIR=$PD" >> "$GITHUB_ENV"

      - name: Pin deps and resolve
        shell: bash
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          rm -rf "$HOME/.pub-cache"
          dart pub add workmanager:^0.7.0
          flutter pub get
          echo "== Resolved direct deps (direct block) =="
          flutter pub deps --style=compact | sed -n '/direct dependencies:/,/dev dependencies:/p'

      - name: Diagnose v1 markers (project + pub cache)
        shell: bash
        run: |
          echo "== project android/ =="
          (cd "${{ env.PROJECT_DIR }}" &&            grep -R -nE 'io\.flutter\.app|FlutterApplication|GeneratedPluginRegistrant|PluginRegistry\.Registrar|registerWith\s*\(|ShimPluginRegistry' android) || true

          echo "== pub cache =="
          PUB_CACHE="${PUB_CACHE:-$HOME/.pub-cache}"
          grep -R --include=*.java --include=*.kt -nE             'PluginRegistry\.Registrar|registerWith\s*\(|io\.flutter\.app|FlutterApplication|GeneratedPluginRegistrant|ShimPluginRegistry'             "$PUB_CACHE" 2>/dev/null || true

      - name: Build release APK
        shell: bash
        working-directory: ${{ env.PROJECT_DIR }}
        run: flutter build apk --release -v

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
