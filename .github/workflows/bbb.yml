name: Android (path-agnostic build)

on:
  workflow_dispatch:
  push:
    branches: [main, master]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # 统一把缓存写到工作区，避免用默认的 ~/.pub-cache、~/.gradle
      PUB_CACHE: ${{ github.workspace }}/.pub-cache
      GRADLE_USER_HOME: ${{ github.workspace }}/.gradle

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 用你提交的源码 zip 覆盖工作区（避免旧 android 目录残留）
      - name: Unzip project (force)
        shell: bash
        run: |
          set -euo pipefail
          SEL="$(ls -1t *FINAL_SYSTEMIC_FIX*.zip 2>/dev/null | head -n1 || true)"
          if [ -z "${SEL}" ]; then SEL="$(ls -1t *.zip 2>/dev/null | head -n1 || true)"; fi
          [ -n "${SEL}" ] || { echo "❌ 没有找到项目 zip"; exit 66; }
          echo "Using zip: ${SEL}"
          unzip -q -o "${SEL}" -x ".github/*"

      - name: Detect Flutter project dir
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          DIR="$(find . -maxdepth 3 -type f -name pubspec.yaml | head -n1 | xargs -I{} dirname {} || true)"
          [ -n "$DIR" ] || { echo "❌ 未找到 pubspec.yaml"; exit 66; }
          DIR="${DIR#./}"
          echo "project_dir=${DIR}" >> "$GITHUB_OUTPUT"
          echo "Project dir: $DIR"

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Flutter 3.35.3 (stable)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.3"
          channel: stable
          cache: true

      # 写 local.properties，把路径绑定到当前主机/runner
      - name: Write local.properties (bind SDK & Flutter path)
        working-directory: ${{ steps.detect.outputs.project_dir }}/android
        shell: bash
        run: |
          set -euo pipefail
          # ANDROID_SDK_ROOT 由 Flutter action 设好；FLUTTER_HOME 也有
          : "${ANDROID_SDK_ROOT:=${ANDROID_HOME:-/usr/local/lib/android/sdk}}"
          : "${FLUTTER_HOME:=$(dirname "$(dirname "$(readlink -f "$(which flutter)")")")}"
          echo "Using ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT"
          echo "Using FLUTTER_HOME=$FLUTTER_HOME"
          cat > local.properties <<'PROP'
          sdk.dir=${ANDROID_SDK_ROOT}
          flutter.sdk=${FLUTTER_HOME}
          PROP

      - name: Print versions
        shell: bash
        run: |
          set -euo pipefail
          flutter doctor -v || true
          flutter --version || true
          dart --version || true
          echo "PUB_CACHE=$PUB_CACHE"
          echo "GRADLE_USER_HOME=$GRADLE_USER_HOME"

      - name: Clean caches
        working-directory: ${{ steps.detect.outputs.project_dir }}
        shell: bash
        run: |
          set -euo pipefail
          flutter clean || true
          rm -f pubspec.lock || true
          yes | flutter pub cache clean >/dev/null 2>&1 || true
          rm -rf "$PUB_CACHE" || true
          rm -rf "$GRADLE_USER_HOME" || true
          mkdir -p "$PUB_CACHE" "$GRADLE_USER_HOME"

      - name: Flutter pub get
        working-directory: ${{ steps.detect.outputs.project_dir }}
        shell: bash
        run: flutter pub get

      - name: Sanity check (:app no manual flutter plugin)
        working-directory: ${{ steps.detect.outputs.project_dir }}
        shell: bash
        run: |
          set -euo pipefail
          APP=android/app/build.gradle
          ! grep -nE 'dev\.flutter\.flutter-gradle-plugin' "$APP"
          ! grep -nE 'apply[[:space:]]+(from|plugin):.*flutter' "$APP" || { echo "❌ app 手动应用了 flutter 插件"; exit 65; }
          grep -nE '^\s*flutter\s*\{' "$APP" || { echo "❌ app 缺少 flutter { source '../..' }"; exit 65; }

      - name: Build APK (release)
        id: build
        working-directory: ${{ steps.detect.outputs.project_dir }}
        shell: bash
        run: |
          set -euo pipefail
          ( set -o pipefail; flutter build apk --release -v 2>&1 | tee build_apk.log )

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-and-logs
          path: |
            ${{ steps.detect.outputs.project_dir }}/build/app/outputs/flutter-apk/app-release.apk
            ${{ steps.detect.outputs.project_dir }}/build_apk.log
