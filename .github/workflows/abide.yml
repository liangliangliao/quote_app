name: android

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: List repo
        run: ls -lah

      - name: Detect flutter project dir
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          DIR="$(find . -maxdepth 6 -type f -name pubspec.yaml -print -quit | xargs -I{} dirname {} || true)"
          if [ -z "$DIR" ]; then
            echo "❌ No pubspec.yaml found"; exit 66
          fi
          echo "project_dir=$DIR" >> "$GITHUB_OUTPUT"
          echo "Detected Flutter project: $DIR"

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Flutter 3.35.3 (stable)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.3'
          channel: stable
          cache: true

      - name: Clean caches (non-interactive; truly clean)
        working-directory: ${{ steps.detect.outputs.project_dir }}
        shell: bash
        run: |
          set -euo pipefail

          # Project clean
          flutter --version
          flutter clean || true

          # Pub cache: remove folder + force clean (避免 y/N 交互)
          rm -rf "$HOME/.pub-cache" || true
          dart pub cache clean --force || true

          # Flutter binary cache
          FR="${FLUTTER_ROOT:-${FLUTTER_HOME:-}}"
          if [ -n "${FR}" ] && [ -d "$FR/bin/cache" ]; then
            rm -rf "$FR/bin/cache" || true
            "$FR/bin/flutter" precache --force
          else
            flutter precache --force
          fi

          # Remove lock to avoid stale resolution
          rm -f pubspec.lock || true

      - name: Pub get
        working-directory: ${{ steps.detect.outputs.project_dir }}
        shell: bash
        run: |
          set -euo pipefail
          flutter pub get

      - name: Build APK (release)
        working-directory: ${{ steps.detect.outputs.project_dir }}
        shell: bash
        run: |
          set -euo pipefail
          flutter build apk --release -v

      - name: Upload APK
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: ${{ steps.detect.outputs.project_dir }}/build/app/outputs/flutter-apk/app-release.apk
